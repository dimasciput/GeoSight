# Generated by Django 3.2.13 on 2022-05-18 06:15

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gap_data', '0035_indicator_source'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=512, unique=True)),
                ('extent', django.contrib.gis.db.models.fields.PolygonField(blank=True, help_text='Extent of the dashboard. If empty, it is the whole map', null=True, srid=4326)),
                ('basemap_layers', models.ManyToManyField(to='gap_data.BasemapLayer')),
                ('context_layers', models.ManyToManyField(blank=True, to='gap_data.ContextLayer')),
                ('point_of_interests', models.ManyToManyField(blank=True, help_text='Filters data by specific geometry. Geometries is from the instance. ', to='gap_data.Geometry')),
                ('reference_layers', models.ManyToManyField(to='gap_data.Indicator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, help_text="A unit e.g. 'cases', 'people', 'children', that will be shown alongside the number in reports.", max_length=64, null=True)),
                ('property', models.CharField(help_text='Property key that will be used to calculate to plugin.', max_length=256)),
                ('type', models.CharField(choices=[('SummaryWidget', 'SummaryWidget')], default='SummaryWidget', max_length=256)),
                ('operation', models.CharField(choices=[('Sum', 'Sum')], default='Sum', max_length=256)),
                ('layer_used', models.CharField(choices=[('ReferenceLayer', 'ReferenceLayer')], default='ReferenceLayer', max_length=256)),
                ('context_layer', models.ForeignKey(blank=True, help_text='Use this layer when layer used is context layer.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gap_data.contextlayer')),
                ('dashboard', models.ForeignKey(help_text='Dashboard this plugin is used.', on_delete=django.db.models.deletion.CASCADE, to='gap_data.dashboard')),
                ('reference_layer', models.ForeignKey(blank=True, help_text='Use this layer when layer used is reference layer.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gap_data.indicator')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
    ]
